# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Checkout Infrastructure repo
      uses: actions/checkout@v4
      with:
        repository: njdimmer/task_manager_infrastructure
        token: ${{ secrets.TASK_MANAGER_INFRASTRUCTURE_TOKEN }}
        path: infrastructure

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install Docker and Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-xdist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest tests -n auto

    - name: Build and start Docker Compose services
      run: |
        cd infrastructure
        docker-compose -f docker-compose.yml up --build -d

    - name: Wait for containers to be ready
      run: |
        docker-compose -f infrastructure/docker-compose.yml exec taskmanager sh -c "until flask db upgrade; do echo 'Waiting for DB...'; sleep 5; done"

    - name: Run tests in Docker container
      run: |
        docker-compose -f infrastructure/docker-compose.yml exec taskmanager pytest tests -n auto

    - name: Stop and remove Docker containers
      run: |
        docker-compose -f infrastructure/docker-compose.yml down
