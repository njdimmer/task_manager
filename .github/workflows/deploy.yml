# This workflow is responsible for deploying the application to the production environment.

name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Azure Container Registry
      run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

    - name: Checkout Infrastructure repo
      uses: actions/checkout@v4
      with:
        repository: njdimmer/task_manager_infrastructure
        token: ${{ secrets.TASK_MANAGER_INFRASTRUCTURE_TOKEN }}
        path: infrastructure

    - name: Create .env file
      run: |
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ./infrastructure/docker/.env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ./infrastructure/docker/.env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> ./infrastructure/docker/.env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./infrastructure/docker/.env

    - name: Build and push Docker images
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/taskmanager:latest .
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/taskmanager:latest

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Apply Terraform
      env:
        TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
        TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        cd infrastructure/terraform
        terraform init
        terraform apply -auto-approve